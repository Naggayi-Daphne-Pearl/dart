Defining a function in dart 
  return_type func_name (parameter_list):  
  {  
      //statement(s)  
     return value;  
  }  
  - return_type - It can be any data type such as void, integer, float, etc. The return type must be matched with the returned value of the function.
  - func_name - It should be an appropriate and valid identifier.
  - parameter_list - It denotes the list of the parameters, which is necessary when we called a function.
  - return value - A function returns a value after complete its execution.
    example:
      int mul(int a, int b){  
       int c;  
       c = a+b;  
       print("The sum is:${c}");  
      } 
      
      // function 
      void main(){
        int sum(int a, int b){
          int c; 
          c = a + b; 
          return c;       
      }
        // calling the function
        var d = sum(20,10);
        print('the sum of two number is ${d}');
      }


Operators
    Operators are symbols or keywords used to perform operations on values. There are several types of operators available in Flutter:

    - Arithmetic operators: used to perform mathematical operations like addition (+), subtraction (-), multiplication (*), division (/), and more.
    - Relational operators: used to compare values and return a boolean result (==, !=, >, <, >=, <=).
    - Logical operators: used to perform logical operations like AND (&&), OR (||), and NOT (!).
    - Assignment operators: used to assign values to variables (=, +=, -=, *=, /=, %=).
    - Ternary operator: a shorthand way of writing simple if-else statements (condition ? if_true : if_false) and exp1 ?? expr2  for If the exp1 is not-null, returns its value, otherwise returns the exp2's value.
